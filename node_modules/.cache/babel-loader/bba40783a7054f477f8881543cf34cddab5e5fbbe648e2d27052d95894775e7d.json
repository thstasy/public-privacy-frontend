{"ast":null,"code":"import { geoDelaunay } from \"./delaunay.js\";\nimport { geoInterpolate } from \"d3-geo\";\nimport { tricontour } from \"d3-tricontour\";\nexport function geoContour() {\n  var v;\n  var contour = tricontour().triangulate(function (data, x, y) {\n    v = geoDelaunay(data.map(function (d) {\n      return [x(d), y(d)];\n    }));\n    return v.delaunay;\n  }).pointInterpolate(function (i, j, a) {\n    var _v$delaunay = v.delaunay,\n      points = _v$delaunay.points,\n      projection = _v$delaunay.projection;\n    var A = projection.invert([points[2 * i], points[2 * i + 1]]),\n      B = projection.invert([points[2 * j], points[2 * j + 1]]);\n    return geoInterpolate(A, B)(a);\n  }).ringsort(function (rings) {\n    // tricky thing: in isobands this function is called twice,\n    // we want to reverse the polygonsâ€™s winding order only in tricontour()\n    // not in isoband()\n    if (rings.length && !rings[0].reversed) {\n      rings.forEach(function (ring) {\n        return ring.reverse();\n      });\n      rings[0].reversed = true;\n    }\n    return [rings];\n  });\n  return contour;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}