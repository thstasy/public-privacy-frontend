{"ast":null,"code":"import _classCallCheck from \"/Users/stasy/Desktop/Public+Privacy_0831/public-privacy-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/stasy/Desktop/Public+Privacy_0831/public-privacy-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/stasy/Desktop/Public+Privacy_0831/public-privacy-frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/stasy/Desktop/Public+Privacy_0831/public-privacy-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/stasy/Desktop/Public+Privacy_0831/public-privacy-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/stasy/Desktop/Public+Privacy_0831/public-privacy-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Matrix4, Object3D, Vector2, Vector3 } from 'three';\nvar CSS2DObject = /*#__PURE__*/function (_Object3D) {\n  _inherits(CSS2DObject, _Object3D);\n  var _super = _createSuper(CSS2DObject);\n  function CSS2DObject() {\n    var _this2;\n    var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.createElement('div');\n    _classCallCheck(this, CSS2DObject);\n    _this2 = _super.call(this);\n    _this2.isCSS2DObject = true;\n    _this2.element = element;\n    _this2.element.style.position = 'absolute';\n    _this2.element.style.userSelect = 'none';\n    _this2.element.setAttribute('draggable', false);\n    _this2.center = new Vector2(0.5, 0.5); // ( 0, 0 ) is the lower left; ( 1, 1 ) is the top right\n\n    _this2.addEventListener('removed', function () {\n      this.traverse(function (object) {\n        if (object.element instanceof Element && object.element.parentNode !== null) {\n          object.element.parentNode.removeChild(object.element);\n        }\n      });\n    });\n    return _this2;\n  }\n  _createClass(CSS2DObject, [{\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(CSS2DObject.prototype), \"copy\", this).call(this, source, recursive);\n      this.element = source.element.cloneNode(true);\n      this.center = source.center;\n      return this;\n    }\n  }]);\n  return CSS2DObject;\n}(Object3D); //\nvar _vector = new Vector3();\nvar _viewMatrix = new Matrix4();\nvar _viewProjectionMatrix = new Matrix4();\nvar _a = new Vector3();\nvar _b = new Vector3();\nvar CSS2DRenderer = /*#__PURE__*/_createClass(function CSS2DRenderer() {\n  var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  _classCallCheck(this, CSS2DRenderer);\n  var _this = this;\n  var _width, _height;\n  var _widthHalf, _heightHalf;\n  var cache = {\n    objects: new WeakMap()\n  };\n  var domElement = parameters.element !== undefined ? parameters.element : document.createElement('div');\n  domElement.style.overflow = 'hidden';\n  this.domElement = domElement;\n  this.getSize = function () {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n  this.render = function (scene, camera) {\n    if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();\n    if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();\n    _viewMatrix.copy(camera.matrixWorldInverse);\n    _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n    renderObject(scene, scene, camera);\n    zOrder(scene);\n  };\n  this.setSize = function (width, height) {\n    _width = width;\n    _height = height;\n    _widthHalf = _width / 2;\n    _heightHalf = _height / 2;\n    domElement.style.width = width + 'px';\n    domElement.style.height = height + 'px';\n  };\n  function renderObject(object, scene, camera) {\n    if (object.isCSS2DObject) {\n      _vector.setFromMatrixPosition(object.matrixWorld);\n      _vector.applyMatrix4(_viewProjectionMatrix);\n      var visible = object.visible === true && _vector.z >= -1 && _vector.z <= 1 && object.layers.test(camera.layers) === true;\n      object.element.style.display = visible === true ? '' : 'none';\n      if (visible === true) {\n        object.onBeforeRender(_this, scene, camera);\n        var element = object.element;\n        element.style.transform = 'translate(' + -100 * object.center.x + '%,' + -100 * object.center.y + '%)' + 'translate(' + (_vector.x * _widthHalf + _widthHalf) + 'px,' + (-_vector.y * _heightHalf + _heightHalf) + 'px)';\n        if (element.parentNode !== domElement) {\n          domElement.appendChild(element);\n        }\n        object.onAfterRender(_this, scene, camera);\n      }\n      var objectData = {\n        distanceToCameraSquared: getDistanceToSquared(camera, object)\n      };\n      cache.objects.set(object, objectData);\n    }\n    for (var i = 0, l = object.children.length; i < l; i++) {\n      renderObject(object.children[i], scene, camera);\n    }\n  }\n  function getDistanceToSquared(object1, object2) {\n    _a.setFromMatrixPosition(object1.matrixWorld);\n    _b.setFromMatrixPosition(object2.matrixWorld);\n    return _a.distanceToSquared(_b);\n  }\n  function filterAndFlatten(scene) {\n    var result = [];\n    scene.traverse(function (object) {\n      if (object.isCSS2DObject) result.push(object);\n    });\n    return result;\n  }\n  function zOrder(scene) {\n    var sorted = filterAndFlatten(scene).sort(function (a, b) {\n      if (a.renderOrder !== b.renderOrder) {\n        return b.renderOrder - a.renderOrder;\n      }\n      var distanceA = cache.objects.get(a).distanceToCameraSquared;\n      var distanceB = cache.objects.get(b).distanceToCameraSquared;\n      return distanceA - distanceB;\n    });\n    var zMax = sorted.length;\n    for (var i = 0, l = sorted.length; i < l; i++) {\n      sorted[i].element.style.zIndex = zMax - i;\n    }\n  }\n});\nexport { CSS2DObject, CSS2DRenderer };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}