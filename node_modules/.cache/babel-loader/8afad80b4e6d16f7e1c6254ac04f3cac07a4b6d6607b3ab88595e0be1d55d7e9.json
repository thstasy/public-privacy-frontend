{"ast":null,"code":"import _classCallCheck from \"/Users/stasy/Desktop/Public+Privacy_0831/public-privacy-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/stasy/Desktop/Public+Privacy_0831/public-privacy-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/stasy/Desktop/Public+Privacy_0831/public-privacy-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/stasy/Desktop/Public+Privacy_0831/public-privacy-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Color } from 'three';\nimport { Pass } from './Pass.js';\nvar RenderPass = /*#__PURE__*/function (_Pass) {\n  _inherits(RenderPass, _Pass);\n  var _super = _createSuper(RenderPass);\n  function RenderPass(scene, camera) {\n    var _this;\n    var overrideMaterial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var clearColor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    var clearAlpha = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    _classCallCheck(this, RenderPass);\n    _this = _super.call(this);\n    _this.scene = scene;\n    _this.camera = camera;\n    _this.overrideMaterial = overrideMaterial;\n    _this.clearColor = clearColor;\n    _this.clearAlpha = clearAlpha;\n    _this.clear = true;\n    _this.clearDepth = false;\n    _this.needsSwap = false;\n    _this._oldClearColor = new Color();\n    return _this;\n  }\n  _createClass(RenderPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n      var oldAutoClear = renderer.autoClear;\n      renderer.autoClear = false;\n      var oldClearAlpha, oldOverrideMaterial;\n      if (this.overrideMaterial !== null) {\n        oldOverrideMaterial = this.scene.overrideMaterial;\n        this.scene.overrideMaterial = this.overrideMaterial;\n      }\n      if (this.clearColor !== null) {\n        renderer.getClearColor(this._oldClearColor);\n        renderer.setClearColor(this.clearColor);\n      }\n      if (this.clearAlpha !== null) {\n        oldClearAlpha = renderer.getClearAlpha();\n        renderer.setClearAlpha(this.clearAlpha);\n      }\n      if (this.clearDepth == true) {\n        renderer.clearDepth();\n      }\n      renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n      if (this.clear === true) {\n        // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n        renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      }\n      renderer.render(this.scene, this.camera);\n\n      // restore\n\n      if (this.clearColor !== null) {\n        renderer.setClearColor(this._oldClearColor);\n      }\n      if (this.clearAlpha !== null) {\n        renderer.setClearAlpha(oldClearAlpha);\n      }\n      if (this.overrideMaterial !== null) {\n        this.scene.overrideMaterial = oldOverrideMaterial;\n      }\n      renderer.autoClear = oldAutoClear;\n    }\n  }]);\n  return RenderPass;\n}(Pass);\nexport { RenderPass };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}